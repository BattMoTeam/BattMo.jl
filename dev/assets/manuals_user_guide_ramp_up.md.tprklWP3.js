import{_ as e,c as t,o as i,aA as s}from"./chunks/framework.BxeeVtwU.js";const m=JSON.parse('{"title":"ðŸ“ˆ Ramp-Up Model","description":"","frontmatter":{},"headers":[],"relativePath":"manuals/user_guide/ramp_up.md","filePath":"manuals/user_guide/ramp_up.md","lastUpdated":null}'),n={name:"manuals/user_guide/ramp_up.md"};function r(l,a,o,p,h,c){return i(),t("div",null,[...a[0]||(a[0]=[s('<h1 id="Ramp-Up-Model" tabindex="-1">ðŸ“ˆ Ramp-Up Model <a class="header-anchor" href="#Ramp-Up-Model" aria-label="Permalink to &quot;ðŸ“ˆ Ramp-Up Model {#Ramp-Up-Model}&quot;">â€‹</a></h1><h2 id="Overview" tabindex="-1">Overview <a class="header-anchor" href="#Overview" aria-label="Permalink to &quot;Overview {#Overview}&quot;">â€‹</a></h2><p>In battery cell simulations, <strong>current ramping</strong> is an essential strategy to prevent non-physical transients and numerical instability that can arise from abrupt current steps. Applying a current instantaneously can introduce high-frequency artifacts or convergence issues in certain electrochemical and thermal models. To avoid this, a smooth transition from 0 to the target current is often applied, known as a <em>ramp-up</em>.</p><hr><h2 id="Why-Use-a-Ramp-Up?" tabindex="-1">Why Use a Ramp-Up? <a class="header-anchor" href="#Why-Use-a-Ramp-Up?" aria-label="Permalink to &quot;Why Use a Ramp-Up? {#Why-Use-a-Ramp-Up?}&quot;">â€‹</a></h2><ul><li><p><strong>Physical realism</strong>: In real-world systems, power electronics and control loops rarely apply a step input instantly. A ramp reflects this behavior more accurately.</p></li><li><p><strong>Numerical stability</strong>: Sudden changes in current can lead to instability or oscillations in the solver, particularly for tightly coupled electrochemical-thermal systems.</p></li></ul><hr><h2 id="Implementation-in-the-Simulation" tabindex="-1">Implementation in the Simulation <a class="header-anchor" href="#Implementation-in-the-Simulation" aria-label="Permalink to &quot;Implementation in the Simulation {#Implementation-in-the-Simulation}&quot;">â€‹</a></h2><p>Our implementation uses a <strong>sinusoidal ramp function</strong>, providing a smooth, differentiable curve that avoids sharp discontinuities. The user can choose to use the ramp up function in their simulation by setting the following model setting:</p><div class="language-JSON vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;RampUp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Sinusoidal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span></code></pre></div>',11)])])}const d=e(n,[["render",r]]);export{m as __pageData,d as default};
