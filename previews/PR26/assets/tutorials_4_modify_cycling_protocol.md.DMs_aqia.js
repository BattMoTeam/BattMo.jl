import{_ as a,c as n,o as i,aA as p}from"./chunks/framework.BFbzQv2c.js";const t="/BattMo.jl/previews/PR26/assets/pmyvuuc.CgqFE_oq.jpeg",E=JSON.parse('{"title":"Exploring the Impact of C-Rate in a CC Discharge Protocol","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/4_modify_cycling_protocol.md","filePath":"tutorials/4_modify_cycling_protocol.md","lastUpdated":null}'),l={name:"tutorials/4_modify_cycling_protocol.md"};function e(h,s,k,o,r,c){return i(),n("div",null,s[0]||(s[0]=[p(`<h1 id="Exploring-the-Impact-of-C-Rate-in-a-CC-Discharge-Protocol" tabindex="-1">Exploring the Impact of C-Rate in a CC Discharge Protocol <a class="header-anchor" href="#Exploring-the-Impact-of-C-Rate-in-a-CC-Discharge-Protocol" aria-label="Permalink to &quot;Exploring the Impact of C-Rate in a CC Discharge Protocol {#Exploring-the-Impact-of-C-Rate-in-a-CC-Discharge-Protocol}&quot;">​</a></h1><p>In this tutorial, we demonstrate the effect that the CRate has on battery performance during discharge, using a constant-current (CC) discharge protocol.</p><h3 id="Load-Required-Packages-and-Data" tabindex="-1">Load Required Packages and Data <a class="header-anchor" href="#Load-Required-Packages-and-Data" aria-label="Permalink to &quot;Load Required Packages and Data {#Load-Required-Packages-and-Data}&quot;">​</a></h3><p>We start by loading the necessary parameters sets and instantiating a model. For the cyling protocol, we&#39;ll start from the default constant current discharge protocol.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BattMo, GLMakie, Printf</span></span></code></pre></div><p>Load cell and model setup</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cell_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pathof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(BattMo)), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/../test/data/jsonfiles/cell_parameters/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cell_parameter_set_chen2020_calibrated.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cycling_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pathof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(BattMo)), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/../test/data/jsonfiles/cycling_protocols/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CCDischarge.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cell_parameters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> read_cell_parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cell_path)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cc_discharge_protocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> read_cycling_protocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cycling_path)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>CyclingProtocol(Dict{String, Any}(&quot;InitialControl&quot; =&gt; &quot;discharging&quot;, &quot;AmbientKelvinTemperature&quot; =&gt; 298.15, &quot;InitialStateOfCharge&quot; =&gt; 0.99, &quot;DRate&quot; =&gt; 1.0, &quot;LowerVoltageLimit&quot; =&gt; 2.5, &quot;InitialKelvinTemperature&quot; =&gt; 298.15, &quot;Protocol&quot; =&gt; &quot;CCDischarge&quot;, &quot;UpperVoltageLimit&quot; =&gt; 4.1))</span></span></code></pre></div><p>Load default model</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LithiumIonBatteryModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>LithiumIonBatteryModel(&quot;1D Doyle-Fuller-Newman lithium-ion model&quot;, ModelSettings(Dict{String, Any}(&quot;UseThermalModel&quot; =&gt; false, &quot;UseCurrentCollectors&quot; =&gt; false, &quot;ModelGeometry&quot; =&gt; &quot;1D&quot;, &quot;UseRampUp&quot; =&gt; true, &quot;UseSEIModel&quot; =&gt; false)), true)</span></span></code></pre></div><h3 id="Modify-the-Cycling-Protocol-–-Varying-the-C-Rate" tabindex="-1">Modify the Cycling Protocol – Varying the C-Rate <a class="header-anchor" href="#Modify-the-Cycling-Protocol-–-Varying-the-C-Rate" aria-label="Permalink to &quot;Modify the Cycling Protocol – Varying the C-Rate {#Modify-the-Cycling-Protocol-–-Varying-the-C-Rate}&quot;">​</a></h3><p>We can have a look at the content of the CylingProtocol object:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cc_discharge_protocol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">all</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Dict{String, Any} with 8 entries:</span></span>
<span class="line"><span>  &quot;InitialControl&quot;           =&gt; &quot;discharging&quot;</span></span>
<span class="line"><span>  &quot;AmbientKelvinTemperature&quot; =&gt; 298.15</span></span>
<span class="line"><span>  &quot;InitialStateOfCharge&quot;     =&gt; 0.99</span></span>
<span class="line"><span>  &quot;DRate&quot;                    =&gt; 1.0</span></span>
<span class="line"><span>  &quot;LowerVoltageLimit&quot;        =&gt; 2.5</span></span>
<span class="line"><span>  &quot;InitialKelvinTemperature&quot; =&gt; 298.15</span></span>
<span class="line"><span>  &quot;Protocol&quot;                 =&gt; &quot;CCDischarge&quot;</span></span>
<span class="line"><span>  &quot;UpperVoltageLimit&quot;        =&gt; 4.1</span></span></code></pre></div><p>Let’s define the range of C-rates to explore:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c_rates </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>4-element Vector{Float64}:</span></span>
<span class="line"><span> 0.2</span></span>
<span class="line"><span> 0.5</span></span>
<span class="line"><span> 1.0</span></span>
<span class="line"><span> 2.0</span></span></code></pre></div><p>Now loop through these values, update the protocol, and store the results:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">outputs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c_rate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c_rates</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	protocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> deepcopy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cc_discharge_protocol)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	protocol[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DRate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c_rate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	sim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Simulation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, cell_parameters, protocol)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	output </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sim; config_kwargs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (; end_report </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	push!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(outputs, (c_rate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c_rate, output </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> output))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>✔️ Validation of CellParameters passed: No issues found.</span></span>
<span class="line"><span>──────────────────────────────────────────────────</span></span>
<span class="line"><span>✔️ Validation of CyclingProtocol passed: No issues found.</span></span>
<span class="line"><span>──────────────────────────────────────────────────</span></span>
<span class="line"><span>✔️ Validation of SimulationSettings passed: No issues found.</span></span>
<span class="line"><span>──────────────────────────────────────────────────</span></span>
<span class="line"><span>Jutul: Simulating 5 hours, 30 minutes as 401 report steps</span></span>
<span class="line"><span>╭────────────────┬───────────┬───────────────┬──────────╮</span></span>
<span class="line"><span>│ Iteration type │  Avg/step │  Avg/ministep │    Total │</span></span>
<span class="line"><span>│                │ 401 steps │ 401 ministeps │ (wasted) │</span></span>
<span class="line"><span>├────────────────┼───────────┼───────────────┼──────────┤</span></span>
<span class="line"><span>│ Newton         │   1.98254 │       1.98254 │  795 (0) │</span></span>
<span class="line"><span>│ Linearization  │   2.98254 │       2.98254 │ 1196 (0) │</span></span>
<span class="line"><span>│ Linear solver  │   1.98254 │       1.98254 │  795 (0) │</span></span>
<span class="line"><span>│ Precond apply  │       0.0 │           0.0 │    0 (0) │</span></span>
<span class="line"><span>╰────────────────┴───────────┴───────────────┴──────────╯</span></span>
<span class="line"><span>╭───────────────┬──────────┬────────────┬──────────╮</span></span>
<span class="line"><span>│ Timing type   │     Each │   Relative │    Total │</span></span>
<span class="line"><span>│               │       μs │ Percentage │       ms │</span></span>
<span class="line"><span>├───────────────┼──────────┼────────────┼──────────┤</span></span>
<span class="line"><span>│ Properties    │  34.4018 │     3.66 % │  27.3494 │</span></span>
<span class="line"><span>│ Equations     │ 176.5613 │    28.26 % │ 211.1673 │</span></span>
<span class="line"><span>│ Assembly      │  74.7104 │    11.96 % │  89.3536 │</span></span>
<span class="line"><span>│ Linear solve  │ 335.3151 │    35.68 % │ 266.5755 │</span></span>
<span class="line"><span>│ Linear setup  │   0.0000 │     0.00 % │   0.0000 │</span></span>
<span class="line"><span>│ Precond apply │   0.0000 │     0.00 % │   0.0000 │</span></span>
<span class="line"><span>│ Update        │  49.2383 │     5.24 % │  39.1445 │</span></span>
<span class="line"><span>│ Convergence   │  63.3109 │    10.13 % │  75.7199 │</span></span>
<span class="line"><span>│ Input/Output  │  26.2380 │     1.41 % │  10.5214 │</span></span>
<span class="line"><span>│ Other         │  34.3382 │     3.65 % │  27.2989 │</span></span>
<span class="line"><span>├───────────────┼──────────┼────────────┼──────────┤</span></span>
<span class="line"><span>│ Total         │ 939.7868 │   100.00 % │ 747.1305 │</span></span>
<span class="line"><span>╰───────────────┴──────────┴────────────┴──────────╯</span></span>
<span class="line"><span>✔️ Validation of CellParameters passed: No issues found.</span></span>
<span class="line"><span>──────────────────────────────────────────────────</span></span>
<span class="line"><span>✔️ Validation of CyclingProtocol passed: No issues found.</span></span>
<span class="line"><span>──────────────────────────────────────────────────</span></span>
<span class="line"><span>✔️ Validation of SimulationSettings passed: No issues found.</span></span>
<span class="line"><span>──────────────────────────────────────────────────</span></span>
<span class="line"><span>Jutul: Simulating 2 hours, 12 minutes as 163 report steps</span></span>
<span class="line"><span>╭────────────────┬───────────┬───────────────┬──────────╮</span></span>
<span class="line"><span>│ Iteration type │  Avg/step │  Avg/ministep │    Total │</span></span>
<span class="line"><span>│                │ 163 steps │ 163 ministeps │ (wasted) │</span></span>
<span class="line"><span>├────────────────┼───────────┼───────────────┼──────────┤</span></span>
<span class="line"><span>│ Newton         │   2.27607 │       2.27607 │  371 (0) │</span></span>
<span class="line"><span>│ Linearization  │   3.27607 │       3.27607 │  534 (0) │</span></span>
<span class="line"><span>│ Linear solver  │   2.27607 │       2.27607 │  371 (0) │</span></span>
<span class="line"><span>│ Precond apply  │       0.0 │           0.0 │    0 (0) │</span></span>
<span class="line"><span>╰────────────────┴───────────┴───────────────┴──────────╯</span></span>
<span class="line"><span>╭───────────────┬────────┬────────────┬──────────╮</span></span>
<span class="line"><span>│ Timing type   │   Each │   Relative │    Total │</span></span>
<span class="line"><span>│               │     ms │ Percentage │       ms │</span></span>
<span class="line"><span>├───────────────┼────────┼────────────┼──────────┤</span></span>
<span class="line"><span>│ Properties    │ 0.0328 │     3.11 % │  12.1748 │</span></span>
<span class="line"><span>│ Equations     │ 0.1708 │    23.27 % │  91.2167 │</span></span>
<span class="line"><span>│ Assembly      │ 0.0697 │     9.49 % │  37.2039 │</span></span>
<span class="line"><span>│ Linear solve  │ 0.4995 │    47.28 % │ 185.3245 │</span></span>
<span class="line"><span>│ Linear setup  │ 0.0000 │     0.00 % │   0.0000 │</span></span>
<span class="line"><span>│ Precond apply │ 0.0000 │     0.00 % │   0.0000 │</span></span>
<span class="line"><span>│ Update        │ 0.0464 │     4.39 % │  17.2099 │</span></span>
<span class="line"><span>│ Convergence   │ 0.0623 │     8.49 % │  33.2633 │</span></span>
<span class="line"><span>│ Input/Output  │ 0.0261 │     1.09 % │   4.2537 │</span></span>
<span class="line"><span>│ Other         │ 0.0306 │     2.90 % │  11.3667 │</span></span>
<span class="line"><span>├───────────────┼────────┼────────────┼──────────┤</span></span>
<span class="line"><span>│ Total         │ 1.0566 │   100.00 % │ 392.0134 │</span></span>
<span class="line"><span>╰───────────────┴────────┴────────────┴──────────╯</span></span>
<span class="line"><span>✔️ Validation of CellParameters passed: No issues found.</span></span>
<span class="line"><span>──────────────────────────────────────────────────</span></span>
<span class="line"><span>✔️ Validation of CyclingProtocol passed: No issues found.</span></span>
<span class="line"><span>──────────────────────────────────────────────────</span></span>
<span class="line"><span>✔️ Validation of SimulationSettings passed: No issues found.</span></span>
<span class="line"><span>──────────────────────────────────────────────────</span></span>
<span class="line"><span>Jutul: Simulating 1 hour, 6 minutes as 84 report steps</span></span>
<span class="line"><span>╭────────────────┬──────────┬──────────────┬──────────╮</span></span>
<span class="line"><span>│ Iteration type │ Avg/step │ Avg/ministep │    Total │</span></span>
<span class="line"><span>│                │ 84 steps │ 84 ministeps │ (wasted) │</span></span>
<span class="line"><span>├────────────────┼──────────┼──────────────┼──────────┤</span></span>
<span class="line"><span>│ Newton         │  3.07143 │      3.07143 │  258 (0) │</span></span>
<span class="line"><span>│ Linearization  │  4.07143 │      4.07143 │  342 (0) │</span></span>
<span class="line"><span>│ Linear solver  │  3.07143 │      3.07143 │  258 (0) │</span></span>
<span class="line"><span>│ Precond apply  │      0.0 │          0.0 │    0 (0) │</span></span>
<span class="line"><span>╰────────────────┴──────────┴──────────────┴──────────╯</span></span>
<span class="line"><span>╭───────────────┬──────────┬────────────┬──────────╮</span></span>
<span class="line"><span>│ Timing type   │     Each │   Relative │    Total │</span></span>
<span class="line"><span>│               │       μs │ Percentage │       ms │</span></span>
<span class="line"><span>├───────────────┼──────────┼────────────┼──────────┤</span></span>
<span class="line"><span>│ Properties    │  31.7505 │     3.79 % │   8.1916 │</span></span>
<span class="line"><span>│ Equations     │ 165.9780 │    26.25 % │  56.7645 │</span></span>
<span class="line"><span>│ Assembly      │  68.7081 │    10.87 % │  23.4982 │</span></span>
<span class="line"><span>│ Linear solve  │ 267.3835 │    31.90 % │  68.9849 │</span></span>
<span class="line"><span>│ Linear setup  │   0.0000 │     0.00 % │   0.0000 │</span></span>
<span class="line"><span>│ Precond apply │   0.0000 │     0.00 % │   0.0000 │</span></span>
<span class="line"><span>│ Update        │ 113.2186 │    13.51 % │  29.2104 │</span></span>
<span class="line"><span>│ Convergence   │  61.6815 │     9.75 % │  21.0951 │</span></span>
<span class="line"><span>│ Input/Output  │  26.3916 │     1.03 % │   2.2169 │</span></span>
<span class="line"><span>│ Other         │  24.4601 │     2.92 % │   6.3107 │</span></span>
<span class="line"><span>├───────────────┼──────────┼────────────┼──────────┤</span></span>
<span class="line"><span>│ Total         │ 838.2646 │   100.00 % │ 216.2723 │</span></span>
<span class="line"><span>╰───────────────┴──────────┴────────────┴──────────╯</span></span>
<span class="line"><span>✔️ Validation of CellParameters passed: No issues found.</span></span>
<span class="line"><span>──────────────────────────────────────────────────</span></span>
<span class="line"><span>✔️ Validation of CyclingProtocol passed: No issues found.</span></span>
<span class="line"><span>──────────────────────────────────────────────────</span></span>
<span class="line"><span>✔️ Validation of SimulationSettings passed: No issues found.</span></span>
<span class="line"><span>──────────────────────────────────────────────────</span></span>
<span class="line"><span>Jutul: Simulating 33 minutes, 0.0002274 nanoseconds as 44 report steps</span></span>
<span class="line"><span>╭────────────────┬──────────┬──────────────┬──────────╮</span></span>
<span class="line"><span>│ Iteration type │ Avg/step │ Avg/ministep │    Total │</span></span>
<span class="line"><span>│                │ 44 steps │ 44 ministeps │ (wasted) │</span></span>
<span class="line"><span>├────────────────┼──────────┼──────────────┼──────────┤</span></span>
<span class="line"><span>│ Newton         │  3.45455 │      3.45455 │  152 (0) │</span></span>
<span class="line"><span>│ Linearization  │  4.45455 │      4.45455 │  196 (0) │</span></span>
<span class="line"><span>│ Linear solver  │  3.45455 │      3.45455 │  152 (0) │</span></span>
<span class="line"><span>│ Precond apply  │      0.0 │          0.0 │    0 (0) │</span></span>
<span class="line"><span>╰────────────────┴──────────┴──────────────┴──────────╯</span></span>
<span class="line"><span>╭───────────────┬──────────┬────────────┬──────────╮</span></span>
<span class="line"><span>│ Timing type   │     Each │   Relative │    Total │</span></span>
<span class="line"><span>│               │       μs │ Percentage │       ms │</span></span>
<span class="line"><span>├───────────────┼──────────┼────────────┼──────────┤</span></span>
<span class="line"><span>│ Properties    │ 134.2964 │    15.42 % │  20.4131 │</span></span>
<span class="line"><span>│ Equations     │ 170.0959 │    25.19 % │  33.3388 │</span></span>
<span class="line"><span>│ Assembly      │  70.0142 │    10.37 % │  13.7228 │</span></span>
<span class="line"><span>│ Linear solve  │ 268.9845 │    30.89 % │  40.8856 │</span></span>
<span class="line"><span>│ Linear setup  │   0.0000 │     0.00 % │   0.0000 │</span></span>
<span class="line"><span>│ Precond apply │   0.0000 │     0.00 % │   0.0000 │</span></span>
<span class="line"><span>│ Update        │  44.3210 │     5.09 % │   6.7368 │</span></span>
<span class="line"><span>│ Convergence   │  63.5969 │     9.42 % │  12.4650 │</span></span>
<span class="line"><span>│ Input/Output  │  27.7191 │     0.92 % │   1.2196 │</span></span>
<span class="line"><span>│ Other         │  23.5055 │     2.70 % │   3.5728 │</span></span>
<span class="line"><span>├───────────────┼──────────┼────────────┼──────────┤</span></span>
<span class="line"><span>│ Total         │ 870.7536 │   100.00 % │ 132.3545 │</span></span>
<span class="line"><span>╰───────────────┴──────────┴────────────┴──────────╯</span></span></code></pre></div><h3 id="Analyze-Voltage-and-Capacity" tabindex="-1">Analyze Voltage and Capacity <a class="header-anchor" href="#Analyze-Voltage-and-Capacity" aria-label="Permalink to &quot;Analyze Voltage and Capacity {#Analyze-Voltage-and-Capacity}&quot;">​</a></h3><p>We&#39;ll extract the voltage vs. time and delivered capacity for each C-rate:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Voltage vs Time&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xlabel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Time / s&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ylabel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Voltage / V&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> outputs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	states </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:states</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [state[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:ControllerCV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> states]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	E </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [state[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Phi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> states]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	I </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [state[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Control</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:Current</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> states]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	label_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @sprintf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%.1fC&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c_rate)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	lines!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax1, t, E, label </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> label_str)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Legend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig, ax1, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C-rates&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, framevisible </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig</span></span></code></pre></div><p><img src="`+t+'" alt=""></p><h2 id="Example-on-GitHub" tabindex="-1">Example on GitHub <a class="header-anchor" href="#Example-on-GitHub" aria-label="Permalink to &quot;Example on GitHub {#Example-on-GitHub}&quot;">​</a></h2><p>If you would like to run this example yourself, it can be downloaded from the BattMo.jl GitHub repository <a href="https://github.com/BattMoTeam/BattMo.jl/blob/main/examples/4_modify_cycling_protocol.jl" target="_blank" rel="noreferrer">as a script</a>, or as a <a href="https://github.com/BattMoTeam/BattMo.jl/blob/gh-pages/dev/final_site/notebooks/4_modify_cycling_protocol.ipynb" target="_blank" rel="noreferrer">Jupyter Notebook</a></p><hr><p><em>This page was generated using <a href="https://github.com/fredrikekre/Literate.jl" target="_blank" rel="noreferrer">Literate.jl</a>.</em></p>',29)]))}const g=a(l,[["render",e]]);export{E as __pageData,g as default};
