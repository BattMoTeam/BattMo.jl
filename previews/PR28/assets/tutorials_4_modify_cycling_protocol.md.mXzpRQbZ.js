import{_ as s,c as t,o as n,aA as i}from"./chunks/framework.CkLnrQ7S.js";const g=JSON.parse('{"title":"Exploring the Impact of C-Rate in a CC Discharge Protocol","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/4_modify_cycling_protocol.md","filePath":"tutorials/4_modify_cycling_protocol.md","lastUpdated":null}'),e={name:"tutorials/4_modify_cycling_protocol.md"};function p(l,a,o,h,r,c){return n(),t("div",null,a[0]||(a[0]=[i(`<h1 id="Exploring-the-Impact-of-C-Rate-in-a-CC-Discharge-Protocol" tabindex="-1">Exploring the Impact of C-Rate in a CC Discharge Protocol <a class="header-anchor" href="#Exploring-the-Impact-of-C-Rate-in-a-CC-Discharge-Protocol" aria-label="Permalink to &quot;Exploring the Impact of C-Rate in a CC Discharge Protocol {#Exploring-the-Impact-of-C-Rate-in-a-CC-Discharge-Protocol}&quot;">​</a></h1><p>In this tutorial, we’ll demonstrate how to programmatically modify a cycling protocol—specifically, the C-rate in a constant-current (CC) discharge protocol—and examine its effect on battery performance and capacity.</p><h3 id="Load-Required-Packages-and-Data" tabindex="-1">Load Required Packages and Data <a class="header-anchor" href="#Load-Required-Packages-and-Data" aria-label="Permalink to &quot;Load Required Packages and Data {#Load-Required-Packages-and-Data}&quot;">​</a></h3><p>We start by loading the necessary parameters sets and instantiating a model. For the cyling protocol, we&#39;ll start from the default constant current discharge protocol.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BattMo, GLMakie, Printf</span></span></code></pre></div><p>Load cell and model setup</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cell_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pathof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(BattMo)), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/../src/input/defaults/cell_parameters/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Chen2020_calibrated.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cycling_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pathof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(BattMo)), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/../src/input/defaults/cycling_protocols/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CCDischarge.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cell_parameters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> load_cell_parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; from_file_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cell_path)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cc_discharge_protocol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> load_cycling_protocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; from_file_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cycling_path)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    &quot;InitialControl&quot; =&gt; &quot;discharging&quot;</span></span>
<span class="line"><span>    &quot;InitialStateOfCharge&quot; =&gt; 0.99</span></span>
<span class="line"><span>    &quot;DRate&quot; =&gt; 1.0</span></span>
<span class="line"><span>    &quot;LowerVoltageLimit&quot; =&gt; 2.4</span></span>
<span class="line"><span>    &quot;InitialKelvinTemperature&quot; =&gt; 298.15</span></span>
<span class="line"><span>    &quot;Protocol&quot; =&gt; &quot;CCDischarge&quot;</span></span>
<span class="line"><span>    &quot;UpperVoltageLimit&quot; =&gt; 4.1</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>Load default model</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LithiumIonBatteryModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>LithiumIonBatteryModel(&quot;1D Doyle-Fuller-Newman lithium-ion model&quot;, {</span></span>
<span class="line"><span>    &quot;UseDiffusionModel&quot; =&gt; &quot;PXD&quot;</span></span>
<span class="line"><span>    &quot;ModelGeometry&quot; =&gt; &quot;1D&quot;</span></span>
<span class="line"><span>    &quot;UseRampUp&quot; =&gt; &quot;Generic&quot;</span></span>
<span class="line"><span>}, true)</span></span></code></pre></div><h3 id="Modify-the-Cycling-Protocol-–-Varying-the-C-Rate" tabindex="-1">Modify the Cycling Protocol – Varying the C-Rate <a class="header-anchor" href="#Modify-the-Cycling-Protocol-–-Varying-the-C-Rate" aria-label="Permalink to &quot;Modify the Cycling Protocol – Varying the C-Rate {#Modify-the-Cycling-Protocol-–-Varying-the-C-Rate}&quot;">​</a></h3><p>We can have a look at the content of the CylingProtocol object:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cc_discharge_protocol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">all</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Dict{String, Any} with 7 entries:</span></span>
<span class="line"><span>  &quot;InitialControl&quot;           =&gt; &quot;discharging&quot;</span></span>
<span class="line"><span>  &quot;InitialStateOfCharge&quot;     =&gt; 0.99</span></span>
<span class="line"><span>  &quot;DRate&quot;                    =&gt; 1.0</span></span>
<span class="line"><span>  &quot;LowerVoltageLimit&quot;        =&gt; 2.4</span></span>
<span class="line"><span>  &quot;InitialKelvinTemperature&quot; =&gt; 298.15</span></span>
<span class="line"><span>  &quot;Protocol&quot;                 =&gt; &quot;CCDischarge&quot;</span></span>
<span class="line"><span>  &quot;UpperVoltageLimit&quot;        =&gt; 4.1</span></span></code></pre></div><p>Let’s define the range of C-rates to explore:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c_rates </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>4-element Vector{Float64}:</span></span>
<span class="line"><span> 0.2</span></span>
<span class="line"><span> 0.5</span></span>
<span class="line"><span> 1.0</span></span>
<span class="line"><span> 2.0</span></span></code></pre></div><p>Now loop through these values, update the protocol, and store the results:</p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>outputs = []</span></span>
<span class="line"><span></span></span>
<span class="line"><span>for c_rate in c_rates</span></span>
<span class="line highlighted"><span>	protocol = deepcopy(cc_discharge_protocol)</span></span>
<span class="line"><span>	protocol[&quot;DRate&quot;] = c_rate</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	sim = Simulation(model, cell_parameters, protocol)</span></span>
<span class="line"><span>	output = solve(sim; config_kwargs = (; end_report = false))</span></span>
<span class="line"><span>	push!(outputs, (c_rate = c_rate, output = output))</span></span>
<span class="line"><span>end</span></span>
<span class="line"><span>nothing # hide</span></span></code></pre></div><h3 id="Analyze-Voltage-and-Capacity" tabindex="-1">Analyze Voltage and Capacity <a class="header-anchor" href="#Analyze-Voltage-and-Capacity" aria-label="Permalink to &quot;Analyze Voltage and Capacity {#Analyze-Voltage-and-Capacity}&quot;">​</a></h3><p>We&#39;ll extract the voltage vs. time and delivered capacity for each C-rate:</p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>fig = Figure(size = (1000, 400))</span></span>
<span class="line"><span>ax1 = Axis(fig[1, 1], title = &quot;Voltage vs Time&quot;, xlabel = &quot;Time / s&quot;, ylabel = &quot;Voltage / V&quot;)</span></span>
<span class="line"><span></span></span>
<span class="line highlighted"><span>for result in outputs</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	states = result.output[:states]</span></span>
<span class="line"><span>	t = [state[:Control][:ControllerCV].time for state in states]</span></span>
<span class="line"><span>	E = [state[:Control][:Phi][1] for state in states]</span></span>
<span class="line"><span>	I = [state[:Control][:Current][1] for state in states]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	label_str = @sprintf(&quot;%.1fC&quot;, result.c_rate)</span></span>
<span class="line"><span>	lines!(ax1, t, E, label = label_str)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>end</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fig[1, 3] = Legend(fig, ax1, &quot;C-rates&quot;, framevisible = false)</span></span>
<span class="line"><span>fig</span></span></code></pre></div><h2 id="Example-on-GitHub" tabindex="-1">Example on GitHub <a class="header-anchor" href="#Example-on-GitHub" aria-label="Permalink to &quot;Example on GitHub {#Example-on-GitHub}&quot;">​</a></h2><p>If you would like to run this example yourself, it can be downloaded from the BattMo.jl GitHub repository <a href="https://github.com/BattMoTeam/BattMo.jl/blob/main/examples/4_modify_cycling_protocol.jl" target="_blank" rel="noreferrer">as a script</a>, or as a <a href="https://github.com/BattMoTeam/BattMo.jl/blob/gh-pages/dev/final_site/notebooks/4_modify_cycling_protocol.ipynb" target="_blank" rel="noreferrer">Jupyter Notebook</a></p><hr><p><em>This page was generated using <a href="https://github.com/fredrikekre/Literate.jl" target="_blank" rel="noreferrer">Literate.jl</a>.</em></p>`,27)]))}const k=s(e,[["render",p]]);export{g as __pageData,k as default};
