import{_ as e,c as a,o,aA as r}from"./chunks/framework.DCHMZPbW.js";const h=JSON.parse('{"title":"Contribute to BattMo.jl development","description":"","frontmatter":{},"headers":[],"relativePath":"manuals/contribution/contribution.md","filePath":"manuals/contribution/contribution.md","lastUpdated":null}'),i={name:"manuals/contribution/contribution.md"};function n(l,t,u,s,d,c){return o(),a("div",null,t[0]||(t[0]=[r('<h1 id="Contribute-to-BattMo.jl-development" tabindex="-1">Contribute to BattMo.jl development <a class="header-anchor" href="#Contribute-to-BattMo.jl-development" aria-label="Permalink to &quot;Contribute to BattMo.jl development {#Contribute-to-BattMo.jl-development}&quot;">​</a></h1><h2 id="Get-involved" tabindex="-1">Get involved <a class="header-anchor" href="#Get-involved" aria-label="Permalink to &quot;Get involved {#Get-involved}&quot;">​</a></h2><p>The code is open source <a href="https://github.com/BattmoTeam/BattMo.jl" target="_blank" rel="noreferrer">on GitHub</a>. Pull requests, comments or issues are welcome!</p><h2 id="Style-Guide" tabindex="-1">Style Guide <a class="header-anchor" href="#Style-Guide" aria-label="Permalink to &quot;Style Guide {#Style-Guide}&quot;">​</a></h2><p>When writing code for BattMo we use the <a href="https://github.com/JuliaDiff/BlueStyle?tab=readme-ov-file#module-imports" target="_blank" rel="noreferrer">Blue Style</a> coding style in general, but we apply some specific rules that are a bit more strict.</p><h2 id="formatting" tabindex="-1">Formatting <a class="header-anchor" href="#formatting" aria-label="Permalink to &quot;Formatting&quot;">​</a></h2><p>Use JuliaFormatter for automatic code formatting. In VSCode there is an extension available.</p>',7)]))}const p=e(i,[["render",n]]);export{h as __pageData,p as default};
