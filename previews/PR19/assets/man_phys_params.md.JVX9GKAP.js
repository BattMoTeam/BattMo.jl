import{_ as s,c as t,o as i,aA as e}from"./chunks/framework.BIuidntl.js";const r="/BattMo.jl/previews/PR19/assets/cutbatterygraph.MDHDstz6.png",n="/BattMo.jl/previews/PR19/assets/electrodegraph.foCU5F4x.png",l="/BattMo.jl/previews/PR19/assets/coatinggraph.CCObUgPM.png",p="/BattMo.jl/previews/PR19/assets/activematerialgraph.k3w5BQ5j.png",h="/BattMo.jl/previews/PR19/assets/electrolytegraph.CmNHLlB0.png",u=JSON.parse('{"title":"Physical Parameters","description":"","frontmatter":{},"headers":[],"relativePath":"man/phys_params.md","filePath":"man/phys_params.md","lastUpdated":null}'),o={name:"man/phys_params.md"};function d(c,a,g,m,k,y){return i(),t("div",null,a[0]||(a[0]=[e(`<h1 id="Physical-Parameters" tabindex="-1">Physical Parameters <a class="header-anchor" href="#Physical-Parameters" aria-label="Permalink to &quot;Physical Parameters {#Physical-Parameters}&quot;">â€‹</a></h1><p>We follow up on the example presented in the first page of the <a href="./../#Getting-started">introduction</a></p><p>After running</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">filename </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pathof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(BattMo)), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/../test/data/jsonfiles/p2d_40.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">inputparams </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> readBattMoJsonInputFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(filename)</span></span></code></pre></div><p>We have an <code>inputparams</code> object that corresponds to the json file <a href="https://github.com/BattMoTeam/BattMo.jl/blob/main/test/data/jsonfiles/p2d_40.json" target="_blank" rel="noreferrer">p2d_40.json</a> which we can investigate directly.</p><p>The simulation input is organised hierarchically <img src="`+r+'" style="width:100%;display:block;margin-left:auto;margin-right:auto;"><img src="'+n+'" style="width:50%;display:block;margin-left:auto;margin-right:auto;"><img src="'+l+'" style="width:70%;display:block;margin-left:auto;margin-right:auto;"><img src="'+p+'" style="width:50%;display:block;margin-left:auto;margin-right:auto;"><img src="'+h+'" style="width:30%;display:block;margin-left:auto;margin-right:auto;"></p>',6)]))}const E=s(o,[["render",d]]);export{u as __pageData,E as default};
