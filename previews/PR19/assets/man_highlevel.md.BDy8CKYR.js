import{_ as a,C as l,c as n,o,j as t,a as s,aA as r,G as d}from"./chunks/framework.BIuidntl.js";const v=JSON.parse('{"title":"High level interface","description":"","frontmatter":{},"headers":[],"relativePath":"man/highlevel.md","filePath":"man/highlevel.md","lastUpdated":null}'),p={name:"man/highlevel.md"},c={class:"jldocstring custom-block",open:""};function h(u,e,g,k,m,f){const i=l("Badge");return o(),n("div",null,[e[3]||(e[3]=t("h1",{id:"High-level-interface",tabindex:"-1"},[s("High level interface "),t("a",{class:"header-anchor",href:"#High-level-interface","aria-label":'Permalink to "High level interface {#High-level-interface}"'},"â€‹")],-1)),e[4]||(e[4]=t("p",null,"Exported functions and their documentation:",-1)),t("details",c,[t("summary",null,[e[0]||(e[0]=t("a",{id:"BattMo.run_battery",href:"#BattMo.run_battery"},[t("span",{class:"jlbinding"},"BattMo.run_battery")],-1)),e[1]||(e[1]=s()),d(i,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[2]||(e[2]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">run_battery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputparams</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractInputParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; hook </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Simulate a battery for a given input (JSON file, Dict, etc.)</p><p><a href="https://github.com/BattMoTeam/BattMo.jl/blob/1f6d4b53f5ec243aaed81276dd05ecd711cf8c5b/src/setup/model_setup.jl#L13-L17" target="_blank" rel="noreferrer">source</a></p>',3))]),e[5]||(e[5]=t("div",{class:"warning custom-block"},[t("p",{class:"custom-block-title"},"Missing docstring."),t("p",null,[s("Missing docstring for "),t("code",null,"setup_simulation"),s(". Check Documenter's build log for details.")])],-1)),e[6]||(e[6]=t("div",{class:"warning custom-block"},[t("p",{class:"custom-block-title"},"Missing docstring."),t("p",null,[s("Missing docstring for "),t("code",null,"setup_model"),s(". Check Documenter's build log for details.")])],-1))])}const _=a(p,[["render",h]]);export{v as __pageData,_ as default};
