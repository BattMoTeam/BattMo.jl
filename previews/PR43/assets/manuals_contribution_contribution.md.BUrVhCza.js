import{_ as t,c as a,o,aA as i}from"./chunks/framework.DjZnhqfw.js";const h=JSON.parse('{"title":"Contribute to BattMo.jl development","description":"","frontmatter":{},"headers":[],"relativePath":"manuals/contribution/contribution.md","filePath":"manuals/contribution/contribution.md","lastUpdated":null}'),n={name:"manuals/contribution/contribution.md"};function r(l,e,s,u,d,c){return o(),a("div",null,e[0]||(e[0]=[i('<h1 id="Contribute-to-BattMo.jl-development" tabindex="-1">Contribute to BattMo.jl development <a class="header-anchor" href="#Contribute-to-BattMo.jl-development" aria-label="Permalink to &quot;Contribute to BattMo.jl development {#Contribute-to-BattMo.jl-development}&quot;">​</a></h1><h2 id="Get-involved" tabindex="-1">Get involved <a class="header-anchor" href="#Get-involved" aria-label="Permalink to &quot;Get involved {#Get-involved}&quot;">​</a></h2><p>The code is open source <a href="https://github.com/BattmoTeam/BattMo.jl" target="_blank" rel="noreferrer">on GitHub</a>. Pull requests, comments or issues are welcome!</p><h2 id="Style-Guide" tabindex="-1">Style Guide <a class="header-anchor" href="#Style-Guide" aria-label="Permalink to &quot;Style Guide {#Style-Guide}&quot;">​</a></h2><p>When writing code for BattMo we use the <a href="https://github.com/JuliaDiff/BlueStyle?tab=readme-ov-file#module-imports" target="_blank" rel="noreferrer">Blue Style</a> coding style in general.</p><h3 id="casings" tabindex="-1">Casings <a class="header-anchor" href="#casings" aria-label="Permalink to &quot;Casings&quot;">​</a></h3><ul><li><p>snake_case: directories, file names, variables, functions</p></li><li><p>PascalCase: parameters, types</p></li></ul><h2 id="formatting" tabindex="-1">Formatting <a class="header-anchor" href="#formatting" aria-label="Permalink to &quot;Formatting&quot;">​</a></h2><p>Use JuliaFormatter for automatic code formatting. In VSCode there is an extension available.</p>',9)]))}const p=t(n,[["render",r]]);export{h as __pageData,p as default};
